% examples of bugs (or just unimplemented stuff) that currently exist in the tokenizer/parser/etc.


% expressions with prefix or postfix operators can't be juxtaposed
% really only matters for unary operators that aren't binary operators
% at "@" is really the only affected case (fixed for other cases)
a = () => 10
A = fn => fn()
c = A@a  %i.e. `A(@a)`. currently behaves like `A() @a`
% tbd if this last case is unidiomatic. If so, then perhaps want to identify this case and say it's ambiguous




% precedence ambiguity between `.` and `()`.
%should obviously be access first, then call due to left to right associativity
% this one is fixable by adding slight float offsets to the operator precedences in the parser
obj = [
    fn = x => x * 2
]
printl(obj.fn(5))

% this one will require type checking to verify myfn is a callable rather than a multipliable
myfn = () => [
    x = 5
]
printl(myfn().x)